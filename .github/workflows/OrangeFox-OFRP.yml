name: OrangeFox [OFRP]

on:
  workflow_dispatch:
    inputs:
      MANIFEST_BRANCH:
        description: 'OrangeFox Manifest Branch'
        required: true
        default: '12.1'
        type: choice
        options:
        - 12.1
        - 11.0
      DEVICE_TREE:
        description: 'Custom Recovery Tree'
        required: true
        default: 'https://github.com/<username>/<repo_name>'
      DEVICE_TREE_BRANCH:
        description: 'Custom Recovery Tree Branch (use master if default)'
        required: true
        default: 'your_branch_name'
      DEVICE_NAME:
        description: 'Specify your Device Codename' # As is, just like your PRODUCT_DEVICE in your device tree.
        required: true
        default: '7304X'
      DEVICE_PATH:
        description: 'Specify your Device Path (Check the DEVICE_PATH in BoardConfig.mk)' # As is, just like your DEVICE_PATH in your BoardConfig.mk
        required: true
        default: 'device/device`s_company/Codename'
      BUILD_TARGET:
        description: 'Specify your Build Target'
        required: true
        default: 'recovery'
        type: choice
        options:
        - bootimage
        - recoveryimage
        - vendorbootimage

jobs:
  build:
    name: Build OFRP by ${{ github.actor }}
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ORANGEFOX_ROOT: OrangeFox/fox_${{ inputs.MANIFEST_BRANCH }}
      OUT_DIR: OrangeFox/fox_${{ inputs.MANIFEST_BRANCH }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}

    permissions:
      contents: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4
              
    - name: Clean-up
      uses: rokibhasansagar/slimhub_actions@main

    - name: Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12
      
    - name: Build Environment
      run: |
        sudo apt install aria2 -y
        git clone https://gitlab.com/OrangeFox/misc/scripts.git
        cd scripts
        sudo bash setup/android_build_env.sh
      
    - name: Set-up Manifest
      run: |
        mkdir -p OrangeFox
        cd OrangeFox
        git config --global user.name "${{ github.actor }}"
        git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
        git clone https://gitlab.com/OrangeFox/sync.git
        cd sync
        ./orangefox_sync.sh --branch ${{ inputs.MANIFEST_BRANCH }} --path ${{ env.ORANGEFOX_ROOT }}

    - name: Cache ccache
      uses: actions/cache@v3
      with:
        path: ~/.ccache
        key: ccache-${{ runner.os }}-${{ github.sha }}
        restore-keys: |
          ccache-${{ runner.os }}-
      
    - name: Clone Device Tree
      run: |
        cd ${{ env.ORANGEFOX_ROOT }}
        git clone ${{ github.event.inputs.DEVICE_TREE }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}
        cd ${{ github.event.inputs.DEVICE_PATH }}
        echo "COMMIT_ID=$(git rev-parse HEAD)" >> $GITHUB_ENV

    - name: Installing python2 for legacy builds
      if: env.CHECK_LEGACY_BRANCH == 'true'
      run: |
        sudo apt-get install python2 python-is-python2

    - name: Building OrangeFox
      run: |
        cd ${{ env.ORANGEFOX_ROOT }}
        set +e
        export USE_CCACHE=1
        export CCACHE_EXEC=/usr/bin/ccache
        sed -i 's/return sandboxConfig\.working/return false/g' build/soong/ui/build/sandbox_linux.go
        source build/envsetup.sh
        export ALLOW_MISSING_DEPENDENCIES=true
        set -e
        lunch twrp_${{ github.event.inputs.DEVICE_NAME }}-eng && make clean && mka adbd ${{ github.event.inputs.BUILD_TARGET }}

    - name: Set Build Date # Build date in UTC
      run: |
        echo "BUILD_DATE=$(TZ=UTC date +%Y%m%d)" >> $GITHUB_ENV

    - name: Check if Recovery Exist
      run: |
        if [ -f ${{ env.OUT_DIR }}/OrangeFox*.img ]; then
            echo "CHECK_IMG_IS_OK=true" >> $GITHUB_ENV
            echo "MD5_IMG=$(md5sum ${{ env.OUT_DIR }}/OrangeFox*.img | cut -d ' ' -f 1)" >> $GITHUB_ENV
        else
            echo "Recovery out directory is empty."
        fi
        if [ -f ${{ env.OUT_DIR }}/OrangeFox*.zip ]; then
            echo "CHECK_ZIP_IS_OK=true" >> $GITHUB_ENV
            echo "MD5_ZIP=$(md5sum ${{ env.OUT_DIR }}/OrangeFox*.zip | cut -d ' ' -f 1)" >> $GITHUB_ENV
        else
            echo "Recovery out directory is empty."
        fi

    - name: Upload to Release
      if: env.CHECK_IMG_IS_OK == 'true' && env.CHECK_ZIP_IS_OK == 'true'
      uses: softprops/action-gh-release@master
      with:
        files: |
          ${{ env.OUT_DIR }}/OrangeFox*.img
          ${{ env.OUT_DIR }}/OrangeFox*.img.tar
          ${{ env.OUT_DIR }}/OrangeFox*.zip
          ${{ env.OUT_DIR }}/ramdisk-recovery.*
        name: Unofficial OrangeFox for ${{ env.DEVICE_NAME }} // ${{ env.BUILD_DATE }}
        tag_name: ${{ github.run_id }}
        body: |
          Build: ${{ inputs.MANIFEST_BRANCH }}
          Device: [Device Tree/Branch](${{ inputs.DEVICE_TREE }}/tree/${{ inputs.DEVICE_TREE_BRANCH }})
          Commit: Most recent [commit](${{ inputs.DEVICE_TREE }}/commit/${{ env.COMMIT_ID }}) during building.
          MD5 (img): ${{ env.MD5_IMG }}
          MD5 (zip): ${{ env.MD5_ZIP }}
